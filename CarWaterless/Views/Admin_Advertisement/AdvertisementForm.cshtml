
@{
    ViewBag.Title = "AdsForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>

    input[type=radio] {
        display: none
    }


    .btn-group-justified {
        width: 100%
    }


    .btn-light {
        color: #212529 !important;
        background-color: #dae0e5 !important;
        border-color: #d3d9df !important;
    }

    .active {
        color: #fff !important;
        background: #00c9a7 !important
    }




</style>


@model Infra.Models.tbAdvertisement



@using (Html.BeginForm("upsertuser", "User", FormMethod.Post, new { id = "AdvertisementForm", @class = "form-horizontal" }))
{



    <div class="app-page-title">
        <div class="page-title-wrapper">
            <div class="page-title-heading">
                <div>
                    Ads Form
                </div>
            </div>
        </div>
    </div>

    <div class="main-card mb-3 card">
        <div class="card-body">

           
            <form class="" id="frm_data">
                <div class="position-relative row form-group">
                    <label for="txt_FullName" class="col-sm-2 col-form-label">Title</label>
                    <div class="col-sm-10">
                        <input name="Title" value="@Model.Title" placeholder="" type="text" class="form-control">
                    </div>
                </div>
                <div class="position-relative row form-group">
                    <label for="txt_UserName" class="col-sm-2 col-form-label">Ads Link</label>
                    <div class="col-sm-10">
                        <input name="WebLink" value="@Model.WebLink" placeholder="" type="text" class="form-control">
                    </div>
                </div>
                <div class="position-relative row form-group">
                    <label for="txt_Password" class="col-sm-2 col-form-label">Ads Duration</label>
                    <div class="col-sm-10">
                        @{
                            var duration = new List<SelectListItem>()
                                                                                                                                                                                                                                                            {
                                    new SelectListItem { Value="",Text="Advertise Duration" },
                                    new SelectListItem { Value="1 month",Text="1 month" },
                                    new SelectListItem { Value="3 months",Text="3 months" },
                                    new SelectListItem { Value="6 months",Text="6 months" },
                                    new SelectListItem { Value="9 months",Text="9 months" },
                                    new SelectListItem { Value="12 months",Text="12 months" },



                                };

                        }
                        @Html.DropDownListFor(a => a.Duration, duration, new { @class = "form-control", name = "Select", require = "require", style = "height:36px;padding:0 5px" })


                    </div>
                </div>


                <div class="position-relative row form-group">
                    <label class="col-sm-2 col-form-label">Ads Type</label>
                    <div class="col-sm-10">

                        <div class="btn-group btn-group-justified" data-toggle="buttons">
                            <label class="btn btn-light r_image rounded-default lb">
                                <input type="radio" name="Option" class="rad_Type" onchange="radchange('Image')" value="Image" id="r_1"> Image
                            </label>

                            <label class="btn btn-light r_gif rounded-default lb">
                                <input type="radio" name="Option" class="rad_Type" onchange="radchange('Gif')" value="Gif" id="r_2"> Gif
                            </label>
                        </div>
                    </div>



                </div>


                <div class="position-relative row form-group" id="div_image" style="display:none">
                    <label for="exampleFile" class="col-sm-2 col-form-label">Photo</label>
                    <div class="col-sm-3">
                        <input name="file" id="exampleFile" type="file" class="form-control-file file_ads" onchange="ShowImagePreview(this,document.getElementById('imagePreview'), 'ads')">
                        <small class="form-text text-muted">Please upload photo.</small>

                    </div>
                    <div class="col-sm-6">
                        <img id="imagePreview" src="http://filestorage.centurylinks-stock.com/ImageStorage/CarWaterlessProject/Ads/@Model.Photo" style="width:200px" />

                    </div>
                </div>

                <div class="position-relative row form-group" id="div_gif" style="display:none">
                    <label for="exampleFile" class="col-sm-2 col-form-label">Gif</label>
                    <div class="col-sm-3">
                        <input name="file" id="file_adsgif" type="file" class="form-control-file file_adsgif" onchange="ShowImagePreviewGif(this,document.getElementById('imagePreviewGif'), 'adsgif')">
                        <small class="form-text text-muted">Please upload Gif.</small>

                    </div>
                    <div class="col-sm-6">
                        <img id="imagePreviewGif" src="http://filestorage.centurylinks-stock.com/ImageStorage/CarWaterlessProject/Ads/@Model.Photo" style="width:200px" />

                    </div>
                </div>




                <input type="hidden" id="photo_ads" name="Photo" />

                <input type="hidden" id="isgifs" name="IsGif" value="@Model.IsGif" />


                <div class="position-relative row form-group">
                    <label for="exampleFile" class="col-sm-2 col-form-label">Publish Page</label>
                    <div class="col-sm-10">
                        <div class="form-group">
                            <div class="form-check">
                                <input id="HomeTop" type="checkbox" value="HomeTop" class="form-check-input chk_type">
                                <label class="form-check-label" for="HomeTop">
                                    Home Top
                                </label>
                            </div>
                            <div class="form-check">
                                <input id="HomeBottom" type="checkbox" value="HomeBottom" class="form-check-input chk_type">
                                <label class="form-check-label" for="HomeBottom">
                                    Home Bottom
                                </label>
                            </div>
                            <div class="form-check">
                                <input id="Branch" type="checkbox" value="Branch" class="form-check-input chk_type">
                                <label class="form-check-label" for="Branch">
                                    Branch
                                </label>
                            </div>
                            <div class="form-check">
                                <input id="BranchDetail" type="checkbox" value="BranchDetail" class="form-check-input chk_type">
                                <label class="form-check-label" for="BranchDetail">
                                    Branch Detail
                                </label>
                            </div>

                        </div>
                    </div>

                </div>




                <input type="text" name="Type" value="@Model.Type" id="txt_type" />




                <div class="position-relative row form-check mt-30">
                    <div class="col-sm-12 d-flex flex-end">
                        <button class="btn btn-lg btn-danger mr-20">Cancel</button>
                        <button class="btn btn-lg btn-primary">Save</button>
                    </div>

                </div>



                @Html.HiddenFor(m => m.ID)

                @Html.HiddenFor(m => m.IsActive)
                @Html.HiddenFor(m => m.IsDeleted)
                @Html.HiddenFor(m => m.Accesstime)
            </form>





        </div>
    </div>





}



@section scripts{

    <script src="~/ArchitectThemes/File/fileupload.js"></script>

    <script>

        var checkvalues;

        $(function () {


            var type = $('#txt_type').val();

            if (type != "" && type != null) {
                checkvalues = $('#txt_type').val().split('_');

                if (checkvalues != null) {
                    for (i = 0; i < checkvalues.length; i++) {
                        $('#' + checkvalues[i]).prop("checked", true);
                    }
                }

            }


            if ($('#isgifs').val() == "value") {

                $('#div_image').hide();
                $('#div_gif').show();

                $('.r_gif').addClass('active');

                $('#isgifs').val(true);

            } else {
                $('#div_image').show();
                $('#div_gif').hide();

                $('.r_image').addClass('active');
                $('#isgifs').val('');
            }




            $('.chk_type').on("click", function () {
                checkvalues = "";

                $('.chk_type:checked').each(function () {

                    checkvalues += $(this).val() + "_";

                });
                checkvalues = checkvalues.slice(0, -1);


                $('#txt_type').val(checkvalues);


            });



        })



            $('#AdvertisementForm').submit(function (e) {

                        e.preventDefault();
                        $.ajax({
                            cache: false,
                            url: '@Url.Action("UpsertData", "Admin_Advertisement")',
                            type: "Post",
                            data: $(this).serialize(),
                            beforeSend: function () {
                                $('.btn').prop("disabled", true);
                            },
                            success: function (myData) {
                                if (myData == "Success") {
                                    Swal.fire({
                                        title: 'Success!',
                                        text: "Successfully Added!",
                                        icon: 'success',
                                        //showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'OK!'

                                    }).then((result) => {
                                        if (result.value) {

                                            location.reload();
                                        }
                                    })
                                }

                            },
                            complete: function () {

                                $('.btn').prop("disabled", false);



                            }
                        });
                    });


        function radchange(type) {
            if (type == "Image") {
                $('#div_image').show();
                $('#div_gif').hide();
                $('#isgifs').val('');

            } else {
                $('#div_image').hide();
                $('#div_gif').show();
                $('#isgifs').val(true);


            }
        }


        function ShowImagePreviewGif(imageUploader, previewImage) {
            var filesToUpload = document.getElementById('file_adsgif').files;
            var file = filesToUpload[0];
            var img = document.createElement("img");
            var reader = new FileReader();
            reader.onload = function (e) {
                $(previewImage).attr('src', e.target.result);
                // var mime_type = "image/gif";
                //if (typeof output_format !== "undefined" && output_format == "png") {
                //    mime_type = "image/png";
                //}
                reader.onloadend = function () {
                    img.src = e.target.result;
                    var base64data = reader.result;
                    // var canvas = document.createElement("canvas");
                    // var ctx = canvas.getContext("2d");
                    // canvas.width = img.width;
                    // canvas.height = img.height;
                    // ctx.drawImage(img, 0, 0, img.width, img.height);
                    // var dataurl = canvas.toDataURL(mime_type, 60 / 100);
                    // var blob = dataURItoBlob(dataurl);
                    // console.log(dataurl);
                    //  $('#photo_ad1').val(dataurl);

                    $('#photo_ads').val(base64data);
                }
            }
            reader.readAsDataURL(file);
        }









    </script>


}